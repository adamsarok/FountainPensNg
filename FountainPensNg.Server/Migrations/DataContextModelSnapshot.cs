// <auto-generated />
using System;
using FountainPensNg.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using NpgsqlTypes;

#nullable disable

namespace FountainPensNg.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FountainPensNg.Server.Data.Models.FountainPen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<NpgsqlTsVector>("FullText")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("tsvector")
                        .HasAnnotation("Npgsql:TsVectorConfig", "english")
                        .HasAnnotation("Npgsql:TsVectorProperties", new[] { "Maker", "ModelName", "Comment", "Rating" });

                    b.Property<string>("ImageObjectKey")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("InsertedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Maker")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nib")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Rating")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FullText");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("FullText"), "GIN");

                    b.ToTable("FountainPens", (string)null);
                });

            modelBuilder.Entity("FountainPensNg.Server.Data.Models.Ink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double?>("Color_CIELAB_L")
                        .HasColumnType("double precision");

                    b.Property<double?>("Color_CIELAB_a")
                        .HasColumnType("double precision");

                    b.Property<double?>("Color_CIELAB_b")
                        .HasColumnType("double precision");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<NpgsqlTsVector>("FullText")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("tsvector")
                        .HasAnnotation("Npgsql:TsVectorConfig", "english")
                        .HasAnnotation("Npgsql:TsVectorProperties", new[] { "Maker", "InkName", "Comment", "Rating" });

                    b.Property<string>("ImageObjectKey")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InkName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("InsertedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Maker")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Ml")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Rating")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FullText");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("FullText"), "GIN");

                    b.HasIndex("Maker", "InkName")
                        .IsUnique();

                    b.ToTable("Inks", (string)null);
                });

            modelBuilder.Entity("FountainPensNg.Server.Data.Models.InkedUp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FountainPenId")
                        .HasColumnType("integer");

                    b.Property<int>("InkId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("InkedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsCurrent")
                        .HasColumnType("boolean");

                    b.Property<int>("MatchRating")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FountainPenId");

                    b.HasIndex("InkId");

                    b.ToTable("InkedUps", (string)null);
                });

            modelBuilder.Entity("FountainPensNg.Server.Data.Models.Paper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<NpgsqlTsVector>("FullText")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("tsvector")
                        .HasAnnotation("Npgsql:TsVectorConfig", "english")
                        .HasAnnotation("Npgsql:TsVectorProperties", new[] { "Maker", "PaperName", "Comment", "Rating" });

                    b.Property<string>("ImageObjectKey")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("InsertedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Maker")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PaperName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Rating")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FullText");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("FullText"), "GIN");

                    b.ToTable("Papers", (string)null);
                });

            modelBuilder.Entity("FountainPensNg.Server.Data.Models.InkedUp", b =>
                {
                    b.HasOne("FountainPensNg.Server.Data.Models.FountainPen", "FountainPen")
                        .WithMany("InkedUps")
                        .HasForeignKey("FountainPenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FountainPensNg.Server.Data.Models.Ink", "Ink")
                        .WithMany("InkedUps")
                        .HasForeignKey("InkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FountainPen");

                    b.Navigation("Ink");
                });

            modelBuilder.Entity("FountainPensNg.Server.Data.Models.FountainPen", b =>
                {
                    b.Navigation("InkedUps");
                });

            modelBuilder.Entity("FountainPensNg.Server.Data.Models.Ink", b =>
                {
                    b.Navigation("InkedUps");
                });
#pragma warning restore 612, 618
        }
    }
}
